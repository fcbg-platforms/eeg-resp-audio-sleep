[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 64.0.0']

[project]
authors = [
  {email = 'mathieu.scheltienne@fcbg.ch', name = 'Mathieu Scheltienne'},
]
classifiers = [
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Operating System :: MacOS',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: Unix',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
]
dependencies = [
  'click>=8.1',
  'mne-lsl>=1.8.0',
  'mne>=1.6',
  'numpy>=1.21,<2.0',
  'packaging',
  'psutil',
  'psychopy',
  'psychtoolbox',
  'stimuli[pport]>=1.0.2',
]
description = 'Project to study sound stimulus synchronous, asynchronous and isochronous with the respiration during sleep.'
keywords = [
  'audio',
  'cardiac',
  'eeg',
  'python',
  'respiration',
  'sleep',
]
license = {file = 'LICENSE'}
maintainers = [
  {email = 'mathieu.scheltienne@fcbg.ch', name = 'Mathieu Scheltienne'},
]
name = 'resp_audio_sleep'
readme = 'README.md'
requires-python = '>=3.10'
version = '0.3.2'

[project.optional-dependencies]
all = [
  'resp_audio_sleep[build]',
  'resp_audio_sleep[style]',
  'resp_audio_sleep[test]',
]
build = [
  'build',
  'twine',
]
full = [
  'resp_audio_sleep[all]',
]
style = [
  'codespell[toml]>=2.2.4',
  'pre-commit',
  'ruff>=0.6.0',
  'toml-sort',
  'yamllint',
]
test = [
  'pytest-cov',
  'pytest-timeout',
  'pytest>=8.0',
]

[project.scripts]
ras = 'resp_audio_sleep.commands.main:run'
ras-sys_info = 'resp_audio_sleep.commands.sys_info:run'

[project.urls]
source = 'https://github.com/fcbg-platforms/eeg-resp-audio-sleep'
tracker = 'https://github.com/fcbg-platforms/eeg-resp-audio-sleep/issues'

[tool.codespell]
check-filenames = true
check-hidden = true
ignore-words = '.codespellignore'
skip = 'build,.git,.mypy_cache,.pytest_cache'

[tool.coverage.report]
exclude_lines = [
  'if __name__ == .__main__.:',
  'if TYPE_CHECKING:',
  'pragma: no cover',
]
precision = 2

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
  '**/__init__.py',
  '**/conftest.py',
  '**/resp_audio_sleep/_version.py',
  '**/resp_audio_sleep/utils/_fixes.py',
  '**/tests/**',
]

[tool.pytest.ini_options]
addopts = ['--color=yes', '--cov-report=', '--durations=20', '--junit-xml=junit-results.xml', '--strict-config', '--tb=short', '-ra', '-v']
junit_family = 'xunit2'
minversion = '8.0'

[tool.ruff]
extend-exclude = []
line-length = 88

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = []
select = ['A', 'B', 'D', 'E', 'F', 'G', 'I', 'LOG', 'NPY', 'PIE', 'PT', 'T20', 'UP', 'W']

[tool.ruff.lint.per-file-ignores]
'*' = [
  'B904', # 'Within an except clause, raise exceptions with raise ... from ...'
  'D100', # 'Missing docstring in public module'
  'D104', # 'Missing docstring in public package'
  'D107', # 'Missing docstring in __init__'
]
'__init__.py' = ['F401']

[tool.ruff.lint.pydocstyle]
convention = 'numpy'
ignore-decorators = ["resp_audio_sleep.utils._docs.copy_doc"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
exclude = ['resp_audio_sleep*tests']
include = ['resp_audio_sleep*']

[tool.tomlsort]
all = true
ignore_case = true
trailing_comma_inline_array = true
